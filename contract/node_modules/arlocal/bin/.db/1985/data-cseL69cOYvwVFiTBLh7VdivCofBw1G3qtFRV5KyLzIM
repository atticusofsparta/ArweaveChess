{
    "name": "Arweave Chess NFTs",
    "owner": "88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM",
    "assets": {
        "membershipToken": {
                "assets":{
                    "88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM":{
                            "name": "88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM",
                            "avatar": "http://localhost:1984/dVFFQbfxIFHpIjTGvH5HPx9P6xKNWaSt21lYBHEu3rc",
                            "settings": {
                                "board" : {"moveType": "clickmove", "style": "ZebraAndBlackWalnut"},
                                "pieces": {"P":"charlemagne","R":"charlemagne","N":"charlemagne","B":"charlemagne","Q":"charlemagne","K":"charlemagne"},
                                "language" : "english",
                                "username": "Atticus",
                                "contact": "Discord: Arch_Druid#9751"
                            },
                            "level":"0",
                            "score": {
                                "wins":"33",
                                "losses":"33",
                                "stalemates":"69420",
                                "total-games":"70000"
                            },
                            "owners": "88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM",
                            "burnable": true
                        }
                },
                "owners": "88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM",
                "burnable": true
            
        },
        "charlemagne":{
            "assets":{  
                        "P": {"name": "Pawn Of Charlemagne","whiteImage":"http://localhost:1984/1L-vMoBnTDK7HPjcBvhV9LBI3gk8ufX70M0DJ29JADY", "blackImage":"http://localhost:1984/ypLyg8zdzikUCdtt2vHPmFELb1m6cOEP0v8Z2kl51_c","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                        "R": {"name": "Rook Of Charlemagne","whiteImage":"http://localhost:1984/x62BKOFJysqvzLe5YeIpD29zC1Bn99zCeRctqtE8aU0", "blackImage":"http://localhost:1984/nYPztRLe3vwqeHDOViv_CstLsBFzWj-x3j65wUXb-lM","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                        "N": {"name": "Knight Of Charlemagne","whiteImage":"http://localhost:1984/yaBteh9W1m6NjOzhFS0ektppX2j2yozCu3wgn4rdTco","blackImage":"http://localhost:1984/XYB6t4XIfY5dqbHashRsZrlQ_eXJIEcZhAK-bfgdS2Y", "owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                        "B": {"name": "Bishop Of Charlemagne", "whiteImage":"http://localhost:1984/cdghkhU3OK7y7rYsB4y1iiTbQ3GBlp39XsZQ3HiY4cY","blackImage":"http://localhost:1984/l4NfmiKsKQdgppMcOg1HPM6OMyMAEN255GM38Kfv1x4","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                        "Q": {"name": "Queen Of Charlemagne", "whiteImage":"http://localhost:1984/Jx7eGggz4-OKy7qdgetuGM77w4dTr-GhWJFJPGUpPDM","blackImage":"http://localhost:1984/8D0cqlvH3MnXJGPnqjn0olR13ry5zMaSaA2czxXlY7A","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                        "K": {"name": "King Of Charlemagne","whiteImage":"http://localhost:1984/xrj2FJu5_H3CqfWjnKrBnt6qh0vDFbFeOx2hT6jdPx8", "blackImage":"http://localhost:1984/_7cc0Mf3sKNkVHrp7fn5_UEcReTWiUG5BTcqP1sOmf4","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false}},
            "owners": "88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM",
            "burnable": true
        },
        "staunton":{
            "assets":{
                "P": {"name": "Pawn Of Staunton","whiteImage":"http://localhost:1984/uzCVwyqifxjH5qB0UbP_oEmHGn0OB65TtemEn9YbT2M", "blackImage":"http://localhost:1984/vtwiB2YssD6COBBk9o-28zqwJfhFd5qZxPhEO5WlAWE","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "R": {"name": "Rook Of Staunton","whiteImage":"http://localhost:1984/TckuWzqsylKyS9YlXzfZ9QIyv_VMn-uvH03QSzi6t38", "blackImage":"http://localhost:1984/m5OC8QbrPHwQVJ7k6RaHWA3EHjk8w1M2NsN1lKNKXLA","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "N": {"name": "Knight Of Staunton","whiteImage":"http://localhost:1984/Z7MkS971ipX4uONq1wZDccQMV2Xs4dag5CwWHeVdNmI","blackImage":"http://localhost:1984/EM8G0dKFZKk4dCsVlzmVflHJss7tyZ2hMPuAAoQi2t8", "owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "B": {"name": "Bishop Of Staunton", "whiteImage":"http://localhost:1984/e6ytbbJNyCF0ZrVpj6Zc1bLnv-71Gqu5JDXhMK7mwL8","blackImage":"http://localhost:1984/KmAyu65aTBzjde7v9pvWHqLjgyoQcQtonTc0XWO2Dsw","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "Q": {"name": "Queen Of Staunton", "whiteImage": "http://localhost:1984/YdQYouiK7OH9Gbos9cHc2-zeULQJmvYP7X0XgCk6F8o","blackImage":"http://localhost:1984/kEJW4Xhje6NEokwjklVewej05_MxetfBEML2A3Birq0","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "K": {"name": "King Of Staunton","whiteImage": "http://localhost:1984/dBRoQ7fdVVNJePAuu6L-cxpYl-r3DzdRWxrONlyaUOQ", "blackImage":"http://localhost:1984/5RXVZmqc-gQCSSuQsWx4Qgml_MEkSITjkKUZNvCJrKI","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false}},
            "owners": "88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM",
            "burnable": true
            },
        "gustavSlenus":{
            "assets":{
                "P": {"name": "Pawn Of Gustav Slenus","whiteImage": "http://localhost:1984/CcFRdgjalztuHoQcjl1Ovxg4xWyBTCKwe0bQmT9ObB0", "blackImage":"http://localhost:1984/sKks2wD7vNMGoNlyblDGcv4t8OCEn-_CbQBwX81z17A","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "R": {"name": "Rook Of Gustav Slenus","whiteImage": "http://localhost:1984/2VKFuHdrBJsivJoz0fK-nYoTRHK0gODCXRrtgigiPCc", "blackImage":"http://localhost:1984/VkkOk469Cu3DYF6Kbir5gQiQJqYeunoHxdQFa9lUnKI","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "N": {"name": "Knight Of Gustav Slenus","whiteImage": "http://localhost:1984/AVLf337TlCDsgW7v6SgsNr1g0OglpI8YUF8UmrVbLqI","blackImage":"http://localhost:1984/ORtS11VIXEeGpq63CZlcWZE_VpPZIPBa__QZ3RGXllM", "owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "B": {"name": "Bishop Of Gustav Slenus", "whiteImage": "http://localhost:1984/9ixPAqrO9vlmzZ3VWS8m7WitB5Mfj6OcArcP1jWnFzo","blackImage":"http://localhost:1984/fpkRyEVy1nkQgJiMQ5PjD_EuOFIMnSYShCDUhmVnTGM","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "Q": {"name": "Queen Of Gustav Slenus", "whiteImage": "http://localhost:1984/FBn_qB_00WQe98kdNN23boLPA5ZKW83Hs_wMIV-ivwo","blackImage":"http://localhost:1984/aXDP1-WBacCwlg2dXm6HT43AE_8YzJX2EaQc2W1zh0o","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "K": {"name": "King Of Gustav Slenus","whiteImage": "http://localhost:1984/6lmgY80LQYrynKp8y-nZcXfCNZy2xBu8epkls6pJ_Jo", "blackImage":"http://localhost:1984/HoyIpl2MmTXCtBt3NTyaQJRVh5ojoH_zUwsIWwmr6SU","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false}},
            "owners": "88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM",
            "burnable": true
        },
        "solidColorBoards": {
            "assets":{
                "BlackAndWhite" : {"name":"Black And White","dark": "black", "light": "white","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "PurpleAndYellow" : {"name":"Purple And Yellow","dark": "purple", "light": "yellow","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "BlueAndWhite" : {"name":"Blue And White","dark": "blue", "light": "white","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "BlackAndRed" : {"name":"Black And Red","dark": "black", "light": "red","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "BlackAndGreen" : {"name":"Black And Green","dark": "black", "light": "green","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "PurpleAndOrange" : {"name":"Purple And Orange","dark": "purple", "light": "orange","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "GoldAndSilver" : {"name":"Gold And Silver","dark": "gold", "light": "silver","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "BlackAndBlue" : {"name":"Black And Blue","dark": "black", "light": "blue","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "PurpleAndWhite" : {"name":"Purple And White","dark": "purple", "light": "white","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "BlueAndYellow" : {"name":"Blue And Yellow","dark": "blue", "light": "yellow","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "GreenAndWhite" : {"name":"Green And White","dark": "green", "light": "white","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "PurpleAndRed" : {"name":"Purple And Red","dark": "purple", "light": "red","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false}},
            "owners": "88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM",
            "burnable": true
        },
        "linearGradientBoards": {
            "assets":{
                "BlueWhiteAndTealBlack": {"name":"Blue/White And Teal/Black","dark": "linear-gradient(to bottom right, teal, black)", "light": "linear-gradient(to bottom, blue, white)","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "YellowWhiteAndBlueBlack": {"name":"Yellow/White And Blue/Black","dark": "linear-gradient(to bottom right, blue, black", "light": "linear-gradient(to bottom, yellow, white)","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "RedWhiteAndPurpleBlack": {"name":"Red/White And Purple/Black","dark": "linear-gradient(to bottom right, purple, black)", "light": "linear-gradient(to bottom, red, white)","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "GreenWhiteAndGreenBlack":{"name":"Green/White And Green/Black","dark": "linear-gradient(to bottom right, green, black)", "light": "linear-gradient(to bottom, green, white)","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "PurpleWhiteAndGreenBlack": {"name":"Purple/White And Green/Black","dark": "linear-gradient(to bottom right, green, black)", "light": "linear-gradient(to bottom, purple, white)","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "OrangeWhiteAndRedBlack": {"name":"Orange/White And Red/Black","dark": "linear-gradient(to bottom right, red, black)", "light": "linear-gradient(to bottom, orange, white)","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "TealWhiteAndYellowBlack":{"name":"Teal/White And Yellow/Black","dark": "linear-gradient(to bottom right, yellow, black)", "light": "linear-gradient(to bottom, teal, white)","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "SilverGreyAndGoldBlack":{"name":"Silver/Grey And Gold/Black","dark": "linear-gradient(to bottom right, gold, black)", "light": "linear-gradient(to bottom, silver, grey)","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "GoldGoldYellowOrangeAndSilverBlack":{"name":"Gold/Gold/Yellow/Orange And Black","dark": "linear-gradient(to bottom, gold, gold, yellow, orange)", "light": "linear-gradient(to bottom right, silver, black)","owners":[], "burnable": false},
                "GreyWhiteAndGreenBlack":{"name":"Grey/White And Green/Black","dark": "linear-gradient(to bottom right, green, black)", "light": "linear-gradient(to bottom, grey, white)","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "PinkWhiteAndPinkRedPurpleBlack":{"name":"Pink/White And Pink/Red/Purple/Black","dark": "linear-gradient(to bottom right, pink, red,purple,black)", "light": "linear-gradient(to bottom, pink, white)","owners":[], "burnable": false},
                "CrimsonYellowAndGreenPurple":{"name":"Crimson/Yellow And Green/Purple","dark": "linear-gradient(to bottom right, green, purple)", "light": "linear-gradient(to bottom, crimson, yellow)","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false}},
            "owners": "88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM",
            "burnable": true
            },
        "radialGradientBoards": {
            "assets":{
                "SilverGreyWhiteAndGold#898703Black": {"name":"Silver/Grey/White And Gold/#898703/Black","dark": "radial-gradient( gold, #898703, black)", "light": "radial-gradient(silver, grey, white)","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "TealSilverWhiteAndSilverGreenBlack": {"name":"Teal/Silver/White And Silver/Green/Black","dark": "radial-gradient(silver, green, black)", "light": "radial-gradient(teal, silver, white)","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "BlueWhiteAndGreenBlack": {"name":"Blue/White And Green/Black","dark": "radial-gradient(green, black)", "light": "radial-gradient(blue, white)","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false}},
            "owners": "88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM",
            "burnable": true
        },
        "conicGradientBoards": {
            "assets":{
                "SilverGreyWhiteAndYellowGoldBlack":{"name":"SilverGreyWhiteAndYellowGoldBlack","dark": "conic-gradient(yellow ,gold, black)", "light": "conic-gradient(silver, grey, white)","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "PinkWhiteAndRedCrimsonBlack": {"name":"PinkWhiteAndRedCrimsonBlack","dark": "conic-gradient(red, crimson, black)", "light": "conic-gradient(pink, white)","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "CrimsonOrangeYellowOrangeCrimsonAndPurpleGreenPurpleBlackGreenPurpleGreen": {"name":"Crimson/Orange/Yellow/Orange/Crimson And Purple/Green/Purple/Black/Green/Purple/Green","dark": "conic-gradient(purple, green, purple,black, green, purple, green)", "light": "conic-gradient(crimson, orange, yellow, orange, crimson)","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false}},
            "owners": "88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM",
            "burnable": true

        },
        "standardWoodBoards": {
            "assets":{
                "BirdsEyeMapleAndEbony": {"name":"Birds Eye Maple And Ebony","dark": "http://localhost:1984/lUDnVbME9xJNWJtiiub4BniJqjSwM6g5hSbaYhkg5PA", "light": "http://localhost:1984/W9Wm3sCAeAlkMbXZIvpHsS1LVXPBQAO49UN5NyLWaiE","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "OakAndEbony": {"name":"Oak And Ebony","dark": "http://localhost:1984/lUDnVbME9xJNWJtiiub4BniJqjSwM6g5hSbaYhkg5PA", "light": "http://localhost:1984/1OXiP3U7Z23HwIfpom2P7bvi9l3UjxN-Nng5QSNXqG8","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "OakAndSmokedOak": {"name":"Oak And Smoked Oak","dark": "http://localhost:1984/7n65tDatDjWiFZ_l0bwHzaaEN6SztDPZSIwjbBPIj0w", "light": "http://localhost:1984/1OXiP3U7Z23HwIfpom2P7bvi9l3UjxN-Nng5QSNXqG8","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "PlumAndSmokedOak": {"name":"Plum And Smoked Oak","dark": "http://localhost:1984/7n65tDatDjWiFZ_l0bwHzaaEN6SztDPZSIwjbBPIj0w", "light": "http://localhost:1984/WkeGruF2Q6MAhFTYYhDPT9w-E_RrQRuKMSLjcjMgjJ0","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false},
                "OliveAndWalnut": {"name":"Olive And Walnut","dark": "http://localhost:1984/XUgMG_sBz7OC_B-BQziivD59lLWUbs1jlMUTNpZnDfU", "light": "http://localhost:1984/qUTXa3izRdzGPcpMoUTDfNEaeb66tA2wUdXKgx6R_fQ","owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], "burnable": false}},
            "owners": "88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM",
            "burnable": true
        },
        "premiumWoodBoards": {
            "assets":{
                    "ZebraAndBlackWalnut":{
                    "name":"Zebra And Black Walnut",
                    "dark": {
                        "h1":"http://localhost:1984/86WADEHLaOs2EAzEkEzVWAHgJsFGTDUO1jBOsCSdWiw",
                        "f1":"http://localhost:1984/04ZEq4-I0P8qmLAD9TPKLXV8uvKbXHTM2alm2tyHtcs",
                        "d1":"http://localhost:1984/hWQj5Q3JFuMFreXFXdT4gXmgUSOxErvQOWd8al3ZmjE",
                        "b1":"http://localhost:1984/K8WGx9HLzg_vHdUNq9BuW9YBoZFjLy2bDlWmoja1WnM",
                        "g2":"http://localhost:1984/t2S8dDbNctF_3yLwiuHgMNcSedrGaZbEqJrMDnQ45Yc",
                        "e2":"http://localhost:1984/zmg9GI9QtwC1tGN1GmNiYgaKBr3QfnpWjL_znMOT-9Y",
                        "c2":"http://localhost:1984/yIokdvVF4112rFiHy_z-yL5k46041O6ZkxZAFlPyMSI",
                        "a2":"http://localhost:1984/ljde8Sji4AB1lzu7ucE2fAJzv2qCDWBimh6PPvf096s",
                        "h3":"http://localhost:1984/8IjjY0F8EzVQ11y3AFEh5TjUnmcpbxuaK1zT3AkTzK0",
                        "f3":"http://localhost:1984/Qhy70VNl0OEH0Uhk2nPXs7mBrMNTnOqEqd4q7MRPoa8",
                        "d3":"http://localhost:1984/EnnL3rnxBPtpofqKyGWJp8veKqm7yq8qqlj7uXUlp0w",
                        "b3":"http://localhost:1984/3bb5AgJFhcnJfmogWmv0xph997779SsBybULON8nuMA",
                        "g4":"http://localhost:1984/X8GIjaAlI1G1LUWZ5aO80imlwOM812EO8fn03slsa44",
                        "e4":"http://localhost:1984/UKK6zZTLa1Dt_O5iq5-i-qff3YNkbAI--WcxH74sV5U",
                        "c4":"http://localhost:1984/xNZlPdPP-l9yOrHGHYmif8d5sH180XKU7X6e_5RYItQ",
                        "a4":"http://localhost:1984/c4Y7w8om8fidDXT01vnUgEBJYZkDPXsRJc17OUw1g9c",
                        "h5":"http://localhost:1984/IJIFjT_Jhx3GUFhlvgeQcQapS3XS6cke-GGw8Pi5DM0",
                        "f5":"http://localhost:1984/3fntFoTxgJTEslpDZegvOKlkPkkV1UxqI18nUPLJJ_o",
                        "d5":"http://localhost:1984/bi0LbHMum7FiQ_9E6K-2mh7a6dNUzG1sdBfnezzt7JQ",
                        "b5":"http://localhost:1984/azqnbSAUAK5GU8HTACeLYmPO3dJa7DG_8mO4vQOVaoE",
                        "g6":"http://localhost:1984/txhNjLD_s9SWuUQiZN8tLw2yoxNTO0W_Q4PTt1bLnMI",
                        "e6":"http://localhost:1984/l_dD81E8-kqXO5mGKh_mabTWYpDPmUohI4lQRLMtD4g",
                        "c6":"http://localhost:1984/tJdKULVomE_q16fmwdSaBKCsMUzNM03zMxuvccUviZQ",
                        "a6":"http://localhost:1984/gJJzWf1ky50Itwt7iPhMFFHmoXMw3kXKWmZ3V2jJpnk",
                        "h7":"http://localhost:1984/ZyA4o7I-rG55fbciag_EURlyvHDByN6oLKbIklyNA-M",
                        "f7":"http://localhost:1984/kRXbi0GUgHAFnaOI58cr6bjGIQVRL-_Eb2iZyW1VLt4",
                        "d7":"http://localhost:1984/7zZF69nBF-l6uHNg10Ta9ZkdPgjCf5vyddmF8PKTM8Y",
                        "b7":"http://localhost:1984/1wxdmMFDIf4C_XEdHGVVR8yqtT5l4odFo_Z_wc2IzHw",
                        "g8":"http://localhost:1984/5Y3GauI-a52MaAwBXdh_kPKRvXobrADTj-hXCNn5crQ",
                        "e8":"http://localhost:1984/TYWJwMjxRZ-y2_T5yBFnc5E5cet6VgsL1lckl0TZqAo",
                        "c8":"http://localhost:1984/laKR7dcVtjhGxwPEz4S9Mej65TtwtTEebiSATrZNTTQ",
                        "a8":"http://localhost:1984/XWqRTlQU5QcgbJpErMg6toUC1yb8C8JHUlUcBSE3iSs"
                    }, 
                    "light": {
                        "g1":"http://localhost:1984/UkGaY4erqkwUAngz2WaZI9cFurbGMWGfw1ma6BQjC0",
                        "e1":"http://localhost:1984/LYoKYZ0lmg6lI2ysPbuAjx7-M2h2vTsYZYXQFRqVJg",
                        "c1":"http://localhost:1984/EinvRcXwrWuLByHdxONxD5qUu4IttuCNcO9DSB8uJIY",
                        "a1":"http://localhost:1984/7pxONa2KcSK1DRAUFu3NaRv2JJwfuMWY015tdpxQ2aI",
                        "h2":"http://localhost:1984/bYqDPk1lpbFzqJoHoJnr_TwNiDGWtz6ytrTkqsQXIM8",
                        "f2":"http://localhost:1984/dALJ7s2_TRsqf-SegC83BJ2tAdkAfYHI8N55mMxsbX8",
                        "d2":"http://localhost:1984/Ufn483mwcX617TzBgyy70CvwiHla3QBlyqhyfaiXPUU",
                        "b2":"http://localhost:1984/HtP6r8bSwoOGV5RbCFM5f20DedVORRooVbuPvdcR8Y",
                        "g3":"http://localhost:1984/7XBX3wpQVEUQi-WgVyuGOwkmHnIqLw5kwqaquxDmS7Q",
                        "e3":"http://localhost:1984/4peJuzQxAtrjHfHe2_dcwdcHKV2HPDor9DNkAni-N2M",
                        "c3":"http://localhost:1984/1HA_jsvqBOEDi_c9dJdwzFQiRq3FcwdsyBvBuixLppI",
                        "a3":"http://localhost:1984/BfkJt2NR4_4hXtZZgyj8pDVycFLIEcJ5GIkZR2k2Pac",
                        "h4":"http://localhost:1984/aiXPRihvsYrheCe0VXlad0zRQudOkOj1at6HMKnbdbw",
                        "f4":"http://localhost:1984/M3xZ64Cf2spkDBDuoNCZxRnWDDCZ266IBzwDyQrZxBc",
                        "d4":"http://localhost:1984/O9uRG0TynYYGZWtjnPsT_EDLKz0wABFgJUiYezfhb3U",
                        "b4":"http://localhost:1984/NicxgKJMXMknls7JMtqsjuIa6P8vk-LkKbCUKAZwrV0",
                        "g5":"http://localhost:1984/rgIeUUiAAkeUlMyFHJNt3syvEQnS6FkFnxKpM_EnE_Q",
                        "e5":"http://localhost:1984/JMyyPEK0VQIWV04uZMp4WX_p4CKlqh2ClAFuXKawQzo",
                        "c5":"http://localhost:1984/8Rg_ALmXG9wYK_uMokmMbnk-Day50erx7x7dmFvegr0",
                        "a5":"http://localhost:1984/TmMFVfm7TqUq434Fg6BQXEqoybMIYJOHWDUyFmzG9uM",
                        "h6":"http://localhost:1984/dcmd_lEo1li1wFeyWNUpQVXdDGiQ1f65UrCogsyUFns",
                        "f6":"http://localhost:1984/TKtapSN7UjuGhjQ33ajYRbY77znafnKY2HFI4J7DqOA",
                        "d6":"http://localhost:1984/veAyPD_0xKdeDgOsmA3T-1kHm6hwDSiXSbwrru4R4Vg",
                        "b6":"http://localhost:1984/wAvYRJWoUl0Z2L7BjddsY9ITmH-vSmTCkVUDIkIy5qE",
                        "g7":"http://localhost:1984/6W79gYojHCNMYQEm223BPQCrolX2dLfyIihgfewalnY",
                        "e7":"http://localhost:1984/rq9stV6Ky9ebTjU4T2Owd8WJsEXtIrtfuP5GsQOK9IE",
                        "c7":"http://localhost:1984/ssZjXdTdnPNUbIH96OYUGzd4-1FBK3OozO0FeZeXWYU",
                        "a7":"http://localhost:1984/hZeDYT-QKOWMlzFZrfgNpChB48bl9DltY9Mn-pLw9qg",
                        "h8":"http://localhost:1984/4pzKtEoC1DUOv7ydoiIFX82N6gCp_IKG2aGUcsO36gc",
                        "f8":"http://localhost:1984/-d3IU1J6rKvR1ppCdIn_zzCc_ENde3EQAIgqWoM1tX0",
                        "d8":"http://localhost:1984/NWhEW32ZAJE7nPlrVLEwVtJGZGhCHu0ws1hhKkgns7U",
                        "b8":"http://localhost:1984/TJR2ymTvbhSVASzLnplWueAo0TAgAoeKbN6xBltxi8A"
                    },
                    "owners":["88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM"], 
                    "burnable": false}},
            "owners": "88-FbW6-fGYKLFyfO5qKZ5xsg5HhUrr2gIt4aIuT_iM",
            "burnable": true
        }
        
        
  

}
}
